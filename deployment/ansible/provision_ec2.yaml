#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: MIT-0

---
- name: provision ec2 for latency tests
  hosts: aws_ec2
  collections:
    - amazon.aws.ec2_instance
  tasks:
  - name: Get hostname
    command: echo {{ ansible_hostname.split('-')[1] }}
    register: hostname
    
  - name: Install dependencies for Amazon Linux 2023
    become: yes
    become_user: root
    dnf:
      name:
        - make
        - gcc
        - patch
        - glibc-devel
        - git
        - apr-devel
        - openssl-devel
        - wget
        - vim
        - tmux
        - java-17-amazon-corretto
        - numactl
        - ethtool
        - perf
        - procps-ng
        - chrony
        - hwloc
        - util-linux-core
        - sysstat
      state: present
    
  - name: Create Maven installation directory
    become: yes
    become_user: root
    file:
      path: /opt/maven
      state: directory
      mode: '0755'
      
  - name: Download Maven
    become: yes
    become_user: root
    get_url:
      url: "https://dlcdn.apache.org/maven/maven-3/3.9.11/binaries/apache-maven-3.9.11-bin.tar.gz"
      dest: "/tmp/apache-maven-3.9.11-bin.tar.gz"
      mode: '0644'
    register: maven_download
    
  - name: Extract Maven
    become: yes
    become_user: root
    unarchive:
      src: "/tmp/apache-maven-3.9.11-bin.tar.gz"
      dest: "/opt/maven"
      remote_src: yes
      creates: "/opt/maven/apache-maven-3.9.11"
    when: maven_download is changed
    
  - name: Create Maven profile script
    become: yes
    become_user: root
    copy:
      dest: /etc/profile.d/maven.sh
      content: |
        #!/bin/bash
        export MAVEN_HOME=/opt/maven/apache-maven-3.9.11
        export PATH=$MAVEN_HOME/bin:$PATH
      mode: '0755'
      
  - name: Create Maven symlink
    become: yes
    become_user: root
    file:
      src: /opt/maven/apache-maven-3.9.11/bin/mvn
      dest: /usr/bin/mvn
      state: link
      
  - name: Generate Self Signed certificates
    shell: |
      openssl req -x509 -newkey rsa:4096 -sha256 -days 365 \
      -nodes -keyout localhost.key -out localhost.crt \
      -subj "/CN=localhost" \
      -addext "subjectAltName=DNS:localhost,IP:127.0.0.1"
      
      openssl pkcs12 -export -out keystore.p12 \
      -inkey localhost.key \
      -in localhost.crt \
      -passout pass:123456
    args:
      creates: keystore.p12
      
  - name: copy run client script to ec2
    copy:
      src: ../run_client.sh
      dest: /home/ec2-user/run_client.sh
      owner: ec2-user
      group: ec2-user
      mode: 0755
    tags:
      - deploy
  - name: copy run server script to ec2
    copy:
      src: ../run_server.sh
      dest: /home/ec2-user/run_server.sh
      owner: ec2-user
      group: ec2-user
      mode: 0755
    tags:
      - deploy   

  - name: copy stop script to ec2
    copy:
      src: ../stop.sh
      dest: /home/ec2-user/stop.sh
      owner: ec2-user
      group: ec2-user
      mode: 0755
    tags:
      - deploy
      
  - name: copy latency report script to ec2
    copy:
      src: ../latency_report.sh
      dest: /home/ec2-user/latency_report.sh
      owner: ec2-user
      group: ec2-user
      mode: 0755
    tags:
      - deploy
      
  - name: Create hft-client directory
    file:
      path: /home/ec2-user/hft-client/src
      state: directory
      owner: ec2-user
      group: ec2-user
      mode: 0755
    tags:
      - deploy
      
  - name: copy java source code
    copy:
      src: ../../src/
      dest: /home/ec2-user/hft-client/src
      owner: ec2-user
      group: ec2-user
      mode: 0644
    tags:
      - deploy
      
  - name: copy pom xml
    copy:
      src: ../../pom.xml
      dest: /home/ec2-user/hft-client/pom.xml
      owner: ec2-user
      group: ec2-user
      mode: 0644
    tags:
      - deploy
      
  - name: copy client config properties to ec2
    copy:
      src: ../../src/main/resources/config.properties
      dest: /home/ec2-user/config.properties
      owner: ec2-user
      group: ec2-user
      
  - name: Build HFT Client
    become: yes
    become_user: ec2-user
    shell: |
      export MAVEN_HOME=/opt/maven/apache-maven-3.9.11
      export PATH=$MAVEN_HOME/bin:$PATH
      cd /home/ec2-user/hft-client
      mvn clean install
      cp ./target/ExchangeFlow-1.0-SNAPSHOT.jar /home/ec2-user/
    environment:
      JAVA_HOME: /usr/lib/jvm/java-17-amazon-corretto
      
  - name: Create mock-trading-server directory
    file:
      path: /home/ec2-user/mock-trading-server
      state: directory
      owner: ec2-user
      group: ec2-user
      mode: 0755
    tags:
      - deploy
      
  - name: copy mock trading server
    copy:
      src: ../../mock-trading-server/
      dest: /home/ec2-user/mock-trading-server/
      owner: ec2-user
      group: ec2-user
      mode: 0644
    tags:
      - deploy
      
  - name: Download Rust Installer
    get_url:
      url: https://sh.rustup.rs
      dest: /tmp/sh.rustup.rs
      mode: '0755'
      force: 'yes'
    tags:
      - rust
      
  - name: Install Rust for ec2-user
    become: yes
    become_user: ec2-user
    shell: /tmp/sh.rustup.rs -y
    args:
      creates: /home/ec2-user/.cargo/bin/rustc
    tags:
      - rust
      
  - name: Build Exchange Server
    become: yes
    become_user: ec2-user
    shell: |
      source $HOME/.cargo/env
      cd /home/ec2-user/mock-trading-server/
      cargo clean
      cargo update
      cargo build --release
    # Removed 'creates' argument to ensure it always builds with the latest code
      
  - name: copy mock trading server configuration toml file
    copy:
      src: ../../mock-trading-server/configuration.toml
      dest: /home/ec2-user/mock-trading-server/configuration.toml
      owner: ec2-user
      group: ec2-user
      
  - name: Ensure histogram_logs directory exists
    file:
      path: /home/ec2-user/histogram_logs
      state: directory
      owner: ec2-user
      group: ec2-user
      mode: 0755
